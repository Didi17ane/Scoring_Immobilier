import streamlit as st
import pandas as pd

# Charger les donn√©es avec score
df = pd.read_csv("scoring_locataires_scores.csv")

# Fonction de segmentation du risque
def segmenter_risque(score):
    if score > 70:
        return "Faible Risque"
    elif score >= 60:
        return "Risque Moyen"
    else:
        return "Risque √âlev√©"

# Appliquer la segmentation
df["Risque"] = df["Score"].apply(segmenter_risque)

# Couleurs personnalis√©es pour affichage conditionnel
couleurs = {
    "Faible Risque": "background-color: #d4edda; color: #155724",
    "Risque Moyen": "background-color: #fff3cd; color: #856404",
    "Risque √âlev√©": "background-color: #f8d7da; color: #721c24",
}

def colorer_ligne(row):
    return [couleurs.get(row["Risque"], "")] * len(row)

# Interface Streamlit
st.set_page_config(page_title="Scoring Locataires Tylimmo", layout="wide")
st.title("üìä Tableau de Scoring des Locataires")

# Section r√©sum√© du rapport
st.markdown("""
### üßæ √Ä propos du projet
Ce tableau pr√©sente l'√©valuation de locataires fictifs selon plusieurs crit√®res :
- Habitudes de paiement (ponctualit√©, retards, paiements fractionn√©s)
- Revenus et emploi
- Dur√©e dans le logement et conflits pass√©s

Le score est calcul√© sur 100 et segment√© en trois cat√©gories de risque :
- ‚úÖ **Faible Risque** (> 70)
- ‚ö†Ô∏è **Risque Moyen** (60 √† 70)
- ‚ùå **Risque √âlev√©** (< 60)
""")

# Affichage tableau stylis√©
st.subheader("üìã Donn√©es des locataires")
st.dataframe(df.style.apply(colorer_ligne, axis=1), use_container_width=True)

# Graphique de r√©partition des risques
st.subheader("üìä R√©partition des locataires par niveau de risque")
st.bar_chart(df["Risque"].value_counts())

# Graphique des scores individuels
st.subheader("üìà Vue d'ensemble des scores")
st.bar_chart(df[['Nom', 'Score']].set_index('Nom'))

# Bouton de t√©l√©chargement du rapport PDF
with open("Rapport_Scoring_Tylimmo.pdf", "rb") as f:
    st.download_button("üì• T√©l√©charger le rapport PDF", f, file_name="Rapport_Scoring_Tylimmo.pdf")
